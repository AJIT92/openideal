<?php

include_once 'idea_widget_extensions.inc';
include_once 'idea_widget_entity.inc';


/**
 * Implements hook_init().
 */
function idea_widget_init() {
  drupal_add_css(drupal_get_path('module', 'idea_widget') . '/idea_widget_ui.css');
}

/**
* Implements hook_menu().
*/

function idea_widget_menu(){
  $items = array();
  $items['api/idea_widget/get-fields'] = array(
    'title' => 'idea_widget_get_fields',
    'page callback' => 'idea_widget_get_fields',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    );
  $items['api/idea_widget/entity/save'] = array(
    'title' => 'idea_widget_save_idea',
    'page callback' => 'idea_widget_save_idea',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    );
  $items['api/idea_widget/entity/save_draft'] = array(
    'title' => 'idea_widget_save_idea',
    'page callback' => 'idea_widget_save_draft_idea',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    );
  $items['api/idea_widget/entity/get/%node'] = array(
    'page callback' => 'idea_widget_get_idea',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'access callback' => 'node_access',
    'access arguments' => array('view', 4),
    );
  $items['api/idea_widget/add_file'] = array(
    'page callback' => 'idea_widget_add_file',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    );
  $items['admin/config/idea_widget'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idea_widget_admin_info'),
    'title' =>'Idea Widget',
    'access arguments' => array('administer site configuration'),
    );
  $items['admin/config/idea_widget_settings'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idea_widget_admin_setting'),
    'type' => MENU_CALLBACK,
    'file' => 'idea_widget.settings.inc',
    'file path' => drupal_get_path('module', 'idea_widget'),
    'access arguments' => array('administer site configuration'),
    );
  return $items;
}

/**
 * Implements hook_block_info().
 */
 function idea_widget_block_info() {
   $blocks = array();
   $blocks['add_assigned_idea_button'] = array(
    'info' => t('Add assigned idea button'),
   );
   $blocks['add_unassigned_idea_button'] = array(
    'info' => t('add unassigned idea button'),
   );
   return $blocks;
 }

/**
 * Implements hook_block_view().
 */
 function idea_widget_block_view($delta='') {
   $block = array();
   switch($delta) {
    case 'add_assigned_idea_button':
       $block['content'] = idea_widget_add_assigned_idea_button();
     break;
     case 'add_unassigned_idea_button':
       $block['content'] = idea_widget_add_unassigned_idea_button();
     break;
   }
   return $block;
 }

/**
 * Output a button to add an idea.
 */

 function idea_widget_add_assigned_idea_button() {
   global $user;
   if ($user->uid) {
     idea_load_idea_angular();
     drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/directives/idea-modal/idea-modal.js', array('weight' => 6));
    $output = "<div id='idea-modal-wrapper'>"."<idea-modal label='".t('Solve a challenge')."' fromchallenge='yes' action='Add idea'></idea-modal>"."</div>";
   } else {
     $output = idea_widget_get_login_link(t('Login to add idea'));
   }
   return $output;
 }


 function idea_widget_add_unassigned_idea_button() {
   global $user;
   if ($user->uid) {
     idea_load_idea_angular();
     drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/directives/idea-modal/idea-modal.js', array('weight' => 6));
    $output = "<div id='idea-modal-wrapper'>"."<idea-modal label='".t('Solve a challenge')."' fromchallenge='no' action='Add idea'></idea-modal>"."</div>";
   } else {
     $output = idea_widget_get_login_link(t('Login to add idea'));
   }
   return $output;
 }


function idea_widget_get_login_link($title) {
  $path = current_path();
  $output = l($title, 'user/login', array(
    'attributes' => array('class' => 'add-idea-btn login-link'),
    'query' => array('destination' => $path)));
  return $output;  
}

function checkAuthor(){
  idea_load_idea_angular();
  drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/directives/idea-modal/idea-modal.js', array('weight' => 6));
  return "<div id='idea-modal-wrapper'>" . "<idea-modal class='link-edit-idea' label='" . t('Edit') . "'  action='edit' fromChallenge= 'no'></idea-modal>" . "</div>";

}

 function idea_load_idea_angular(){
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular/angular.min.js', array('weight' => 0));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-file-upload/dist/angular-file-upload.min.js', array('weight' => 1));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/ng-file-upload/ng-file-upload.min.js', array('weight' => 2));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-messages/angular-messages.min.js', array('weight' => 3));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-animate/angular-animate.min.js', array('weight' => 4));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-aria/angular-aria.min.js', array('weight' => 5));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-material/angular-material.min.js', array('weight' => 6));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-material-fileinput/dist/lf-ng-md-file-input.js', array('weight' => 7));
   drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/directives/file-input-m/file-input-m.js', array('weight' => 8));
   drupal_add_css(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-material/angular-material.min.css');
   drupal_add_css(drupal_get_path('module', 'idea_widget') . '/components/idea_widget.css');
   drupal_add_css(drupal_get_path('module', 'idea_widget') . '/components/bower_components/angular-material-fileinput/dist/lf-ng-md-file-input.css');
     drupal_add_js(drupal_get_path('module', 'idea_widget') . '/components/idea_widget.js', array('weight' => 5));
  
 }

/**
 *Save file that post by client
 */
function idea_widget_add_file(){
  drupal_get_messages();
  $json = new stdClass();
  $json->status = "Error" ;
  $file_post = $_FILES['file'];
  //dpm($file_post);
  $data = $_POST ;
  //dpm($data);
  $filed_name = $data['field_name']?$data['field_name']:'field_idea_image';
  //dpm($filed_name);
  if (!empty($file_post['name'])) {
    $infofieldfile = field_info_instances('node', 'idea');
    $validators = array(
      'file_validate_extensions' => array($infofieldfile[$filed_name]['settings']['file_extensions']),
      'file_validate_size'=> array($infofieldfile[$filed_name]['settings']['max_filesize'])
      );
    //Create the directory if it does not already exist, otherwise check the permissions
    $specific_direc = $data['directory'] ?  $_POST['directory']:"idea_widget/".$filed_name;
    $dest = 'public://'.$specific_direc;
    file_prepare_directory($dest, FILE_CREATE_DIRECTORY);
    //dpm($dest);
    foreach ($file_post as $key => $info_file) {
      if($key=='name'){
        $info_file = str_replace(',','-',$info_file);
      }
      $_FILES['files'][$key]['w_idea_upload'] = $info_file;
    }
    if ($file = file_save_upload('w_idea_upload', $validators, $dest)) {
      //dpm($file);
      $file->filepath = drupal_realpath($file->uri);
      $file_content = file_get_contents($file->filepath);
      $file->url = file_create_url($file->uri);
      $json->status = "SUCCESS" ;
      $json->fileInfo = $file;
      //dpm($file);
    }
    else {
      $drupal_messages = drupal_get_messages();
      $error = $drupal_messages['error'];
      $json->msg = $error;
    }
  }
  else {
    $json->msg = "missing File";
  }
  print drupal_json_encode($json);
}

/**
 *get settings(tabs,fields ..) of the widget.
 */
function idea_widget_get_fields(){
  global $base_url;
  $results = array();
  $results['title'] = 'Add Idea';
  $results['oi_site'] = $base_url;
  $results['tabs'] = variable_get('oi_idea_widget',array());
  drupal_json_output($results);
}

/**
 *Save new idea
 */
function idea_widget_save_idea(){
  idea_widget_inner_save_idea('new');
  return;
}

/**
 *Save draft idea
 */
function idea_widget_save_draft_idea(){
   idea_widget_inner_save_idea('draft');
   return;
}

/**
 * @param $node
 * send to client idea entity
 */
function idea_widget_get_idea($node) {
  $widget_settings = variable_get('oi_idea_widget', array());
  $fields = array();
  if (!empty($widget_settings)) {
    foreach ($widget_settings as $item) {
      if ($item['fields']) {
        $fields = array_merge($fields, $item['fields']);
      }
      else {
        $fields[] = $item;
      }
    }
  }
  $entity = convert_from_db_data_to_client_data($fields,$node);
  drupal_alter('idea_data', $entity);
  drupal_json_output(array('data'=>$entity));
}

/**
 * idea widget info page
 */
function idea_widget_admin_info($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'idea_widget') . '/idea_widget_admin.js');
  global $base_url;
  $form['settings_link'] = array(
    '#type' => 'item',
    '#title' => t('Setting page'),
    '#markup' => l("Set fields and Tabs To Idea widget","admin/config/idea_widget_settings", array('attributes' => array('target' =>'_blank' )))
  );
  $form['embed_widget'] = array(
    '#type' => 'item',
    '#title' => t('Embed widget'),
    '#markup' => '<div><textarea class="js-copytextarea" readonly>'.(string)'<div><script type="text/javascript" src="'.$base_url. '/sites/all/modules/idea_widget/idea_widget.js"></script</div>'.'</textarea><button class="js-textareacopybtn">'.t('Copy Clipboard').'</button></div>'
  );
  $form['disable_idea_widget'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable the widget in add and edit pages'),
    '#default_value' => variable_get('disable_idea_widget',false)
  );

  return system_settings_form($form);
}


/**
 * Implements hook_ctools_plugin_directory().
 */
function idea_widget_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'page_manager' || $owner == 'panels' || $owner == 'ctools') {
    return 'plugins/' . $plugin_type;
  }
}
