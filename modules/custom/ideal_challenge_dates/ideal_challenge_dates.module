<?php

/**
 * Implements hook_block_info().
 */
function ideal_challenge_dates_block_info() {
	$blocks = array();
	$blocks['challenge_data'] = array(
		'info' => t('Challenge Data Block'),
	);
	return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ideal_challenge_dates_block_view($delta = '') {
	if ($delta == 'challenge_data') {
		$block['content'] = _ideal_challenge_dates_progress();
		return $block;
  }
}

/**
 * Calculate progress of challenge.
 */
function _ideal_challenge_dates_progress() {
	$entity = menu_get_object();
	if ($entity) {
		$node = entity_metadata_wrapper('node', $entity);
		$startdate = $node->field_dates->value->value();
		$enddate = $node->field_dates->value2->value();
		$start = new DateTime(date('c'));
		$end = new DateTime(date('c', $enddate));
    // Time difference from now to end date.
		$diffnow = $start->diff($end);
    // Time difference from start date to end date.
		$diff = abs($enddate - $startdate);
    // Time difference from now to start date.
		$diffpassed = abs(time() - $startdate);
		if ($enddate > time()) {
      // Create HTML for time left counter on challenge.
      // Show year and months only if larger than 0.
			$yearshtml = '';
			if ($diffnow->y > 0) {
				$yearshtml = '<span><strong class="challenge-date-value">' . $diffnow->y . '</strong>&nbsp;<small class="challenge-date-label small">' . format_plural($diffnow->y, 'Year', 'Years') . '</small></span><br />';
			}
			$monthshtml = '';
			if ($diffnow->y > 0 || $diffnow->m > 0) {
				$monthshtml = '<span><strong class="challenge-date-value">' . $diffnow->m . '</strong>&nbsp;<small class="challenge-date-label">' . format_plural($diffnow->m, 'Month', 'Months') . '</small></span><br />';
			}
			$dayshtml = '<span><strong class="challenge-date-value">' . $diffnow->d . '</strong>&nbsp;<small class="challenge-date-label">' . format_plural($diffnow->d, 'Day', 'Days') . '</small></span><br />';
			// If the year is not displayed, display hours.
      $hourshtml = '';
			if ($diffnow->y == 0) {
				$hourshtml = '<span><strong class="challenge-date-value">' . $diffnow->h . '</strong>&nbsp;<small class="challenge-date-label">' . format_plural($diffnow->h, 'Hour', 'Hours') . '</small></span><br />';
			}
      // If the month is not displayed, display minutes.
			$minuteshtml = '';
			if ($diffnow->y == 0 && $diffnow->m == 0) {
				$minuteshtml = '<span><strong class="challenge-date-value">' . $diffnow->i . '</strong>&nbsp;<small class="challenge-date-label ">' . format_plural($diffnow->s, 'Min', 'Mins') . '</small></span><br />';
			}
      // Calculate percentage of time passed.
			$complete = round(($diffpassed / $diff) * 100);
      // Output progress bar of time passed and time counter.
			// Progressbar removed:
      // <h4>'. t('Challenge is @complete% completed', array('@complete' => $complete)) . '</h4>
      // <div class="progress"><div class="bar" style="width:' . $complete . '%;"></div></div>
			$output = array(
				'#type' => 'markup',
				'#markup' => '<div>
				<h4>' . t('Time left') . '</h4>
				<div id="challenge-dates">' . $yearshtml . $monthshtml . $dayshtml . $hourshtml . $minuteshtml . '</div>
				</div>',
			);
		}
		else {
      // If end date of challenge is in the past, the challenge is completed.
			$output = array(
				'#type' => 'markup',
				'#markup' => '<div class="well">' . t('The challenge is completed.') .'</div>',
			);
		}
		return $output;
	}
}
